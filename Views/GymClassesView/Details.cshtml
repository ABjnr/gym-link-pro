@model GymLinkPro.Models.GymClass

@{
    ViewData["Title"] = "Gym Class Details";
    var trainers = ViewBag.Trainers as Dictionary<int, string>;
}

<h1>Gym Class Details</h1>

<div>
    <h4>GymClass</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">Image</dt>
        <dd class="col-sm-10">
            @if (!string.IsNullOrEmpty(Model.ImagePath))
            {
                <img src="@Model.ImagePath" alt="Class Image" style="max-width:200px;" />
            }
        </dd>
        <dt class="col-sm-2">@Html.DisplayNameFor(m => m.Name)</dt>
        <dd class="col-sm-10">@Model.Name</dd>
        <dt class="col-sm-2">@Html.DisplayNameFor(m => m.Description)</dt>
        <dd class="col-sm-10">@Model.Description</dd>
        <dt class="col-sm-2">@Html.DisplayNameFor(m => m.StartTime)</dt>
        <dd class="col-sm-10">@Model.StartTime?.ToString(@"hh\:mm")</dd>
        <dt class="col-sm-2">@Html.DisplayNameFor(m => m.EndTime)</dt>
        <dd class="col-sm-10">@Model.EndTime?.ToString(@"hh\:mm")</dd>
        <dt class="col-sm-2">Trainer</dt>
        <dd class="col-sm-10">
            @(trainers != null && trainers.ContainsKey(Model.TrainerId) ? trainers[Model.TrainerId] : "Unknown")
        </dd>
    </dl>
</div>
<a asp-action="Edit" asp-route-id="@Model.GymClassId" class="btn btn-primary">Edit</a>
<a asp-action="Index" class="btn btn-secondary">Back to List</a>